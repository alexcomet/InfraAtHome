[agent]
  interval = "10s"

[[inputs.mqtt_consumer]]
  ## Broker URLs for the MQTT server or cluster.  To connect to multiple
  ## clusters or standalone servers, use a seperate plugin instance.
  ##   example: servers = ["tcp://localhost:1883"]
  ##            servers = ["ssl://localhost:1883"]
  ##            servers = ["ws://localhost:1883"]
  servers = ["tcp://domoticz.ravindra-job.com:1883"]


  ## Topics that will be subscribed to.
 topics = [
  "zigbee2mqtt/door-chambre",
  "zigbee2mqtt/door-palier",
  "zigbee2mqtt/door-sodastream-cuisine",
  "zigbee2mqtt/motion-chambre",
  "zigbee2mqtt/motion-entree",
  "zigbee2mqtt/motion-sdb",
  "zigbee2mqtt/plug-hotte-cuisine",
  "zigbee2mqtt/switch-chambre",
  "zigbee2mqtt/switch-salon",
  "zigbee2mqtt/temp-salon",
  "zigbee2mqtt/temp-cuisine",
  "zigbee2mqtt/temp-chambre",
  "zigbee2mqtt/temp-sdb",
  "zigbee2mqtt/waterleak-cuisine", 
  "zigbee2mqtt/plug-machine-sdb", 
  "zigbee2mqtt/fenetre-chambre", 
  "zigbee2mqtt/vibration-sdb", 
  "zigbee2mqtt/cube-salon", 
  "zigbee2mqtt/temp-baie", 
  "zigbee2mqtt/bouton-chambre",
  "zigbee2mqtt/plug-cafe-cuisine",
  "zigbee2mqtt/door-cafe-cuisine",
  "zigbee2mqtt/Repeater",
  "zigbee2mqtt/plug-chargerTEL-chambre",

]

## The message topic will be stored in a tag specified by this value.  If set
  ## to the empty string no topic tag will be created.
  # topic_tag = "topic"

  ## QoS policy for messages
  ##   0 = at most once
  ##   1 = at least once
  ##   2 = exactly once
  ##
  ## When using a QoS of 1 or 2, you should enable persistent_session to allow
  ## resuming unacknowledged messages.
  # qos = 0

  ## Connection timeout for initial connection in seconds
  # connection_timeout = "30s"

  ## Maximum messages to read from the broker that have not been written by an
  ## output.  For best throughput set based on the number of metrics within
  ## each message and the size of the output's metric_batch_size.
  ##
  ## For example, if each message from the queue contains 10 metrics and the
  ## output metric_batch_size is 1000, setting this to 100 will ensure that a
  ## full batch is collected and the write is triggered immediately without
  ## waiting until the next flush_interval.
  # max_undelivered_messages = 1000

  ## Persistent session disables clearing of the client session on connection.
  ## In order for this option to work you must also set client_id to identify
  ## the client.  To receive messages that arrived while the client is offline,
  ## also set the qos option to 1 or 2 and don't forget to also set the QoS when
  ## publishing.
  # persistent_session = false

  ## If unset, a random client ID will be generated.
  # client_id = ""

  ## Username and password to connect MQTT server.
   username = "MQTTUSER"
   password = "PASSWORD"

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
#  data_format = "influx"

data_format = "json"
#data_format = "value"
data_type = "string" # or "float"
json_string_fields = ["contact"]
